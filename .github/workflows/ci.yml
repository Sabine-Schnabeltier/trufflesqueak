name: CI

on:
  push:
    branches-ignore:
      - 'experiements/**'
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  style_and_build_config:
    name: Code Style + Build Config
    timeout-minutes: 15
    runs-on: ubuntu-18.04
    steps:
    - name: Clone TruffleSqueak repository
      uses: actions/checkout@v2
    - name: Set up dependencies
      run: |
        # Install pylint
        sudo apt update -qq && sudo apt install -qq python-pip python-virtualenv
        virtualenv ~/venv
        source ~/venv/bin/activate
        pip install --quiet astroid==1.1.0 pylint==1.1.0
        # Download Eclipse SDK
        eclipse_tar="ci-dep-eclipse-SDK-4.5.2-linux-gtk-x86_64.tar.gz"
        eclipse_tar_path="${HOME}/${eclipse_tar}"
        mx.trufflesqueak/utils.sh download-asset "${eclipse_tar}" 0.8.0 "${eclipse_tar_path}"
        tar -xzf ${eclipse_tar_path} -C ${HOME}
        echo "ECLIPSE_EXE=${HOME}/eclipse/eclipse" >> "${GITHUB_ENV}" # required by mx
        # Download ECJ
        mx.trufflesqueak/utils.sh download-asset "ci-dep-ecj-4.5.2.jar" 0.8.0 "${HOME}/ecj.jar"
        echo "JDT=${HOME}/ecj.jar" >> "${GITHUB_ENV}" # required by mx
        # Set up mx, oracle/graal, and LabsJDK11
        mx.trufflesqueak/utils.sh set-up-mx
        mx.trufflesqueak/utils.sh shallow-clone-graalvm-project https://github.com/oracle/graal.git
        mx.trufflesqueak/utils.sh set-up-labsjdk11 ~/
    - name: Check style and perform full build
      run: |
        source ~/venv/bin/activate
        mx gate --strict-mode --tags style,fullbuild

  linux-java11:
    name: Linux + JDK11 + Coverage
    timeout-minutes: 90
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - name: Clone TruffleSqueak repository
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up dependencies
      shell: bash
      run: |
        sudo apt update -qq && sudo apt install -qq libsdl2-dev
        mx.trufflesqueak/utils.sh set-up-dependencies java11
    - name: Build TruffleSqueak components
      run: mx.trufflesqueak/utils.sh build-components java11
    - name: Install SVM-enabled TruffleSqueak component
      run: gu install -L "${INSTALLABLE_SVM_TARGET}"
    - name: Run SystemReporter on GraalVM
      run: trufflesqueak --jvm --code "SystemReporter new reportText asString"
    - name: Run SystemReporter on SubstrateVM
      run: trufflesqueak --native --code "SystemReporter new reportText asString" images/test-64bit.image
    - name: Run tinyBenchmarks on GraalVM
      run: trufflesqueak --jvm --code "1 tinyBenchmarks" images/test-64bit.image
    - name: Run tinyBenchmarks on SubstrateVM
      run: trufflesqueak --native --code "1 tinyBenchmarks" images/test-64bit.image
    - name: Upload TruffleSqueak components
      run: |
        mx.trufflesqueak/utils.sh deploy-asset ${{ env.INSTALLABLE_JVM_TARGET }} ${{ secrets.GITHUB_TOKEN }}
        mx.trufflesqueak/utils.sh deploy-asset ${{ env.INSTALLABLE_SVM_TARGET }} ${{ secrets.GITHUB_TOKEN }}
    - name: Run gate with Graal compiler, Graal.js, and code coverage
      run: mx --disable-polyglot --dy /compiler,/graal-js gate --strict-mode --tags build,test --jacocout coverage
    - name: Report code coverage
      env:
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      run: |
        bash <(curl -s https://codecov.io/bash)
        curl -sSL --retry 3 -o ~/codacy-coverage-reporter.jar "https://github.com/codacy/codacy-coverage-reporter/releases/download/4.0.3/codacy-coverage-reporter-4.0.3-assembly.jar"
        java -jar ~/codacy-coverage-reporter.jar report -l Java -r jacoco.xml
      if: success()

  linux-java8:
    name: Linux + JDK8 + Coverage
    timeout-minutes: 90
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - name: Clone TruffleSqueak repository
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up dependencies
      shell: bash
      run: |
        sudo apt update -qq && sudo apt install -qq libsdl2-dev
        mx.trufflesqueak/utils.sh set-up-dependencies java8
    - name: Build TruffleSqueak components
      run: mx.trufflesqueak/utils.sh build-components java8
    - name: Install SVM-enabled TruffleSqueak component
      run: gu install -L "${INSTALLABLE_SVM_TARGET}"
    - name: Run SystemReporter on GraalVM
      run: trufflesqueak --jvm --code "SystemReporter new reportText asString"
    - name: Run SystemReporter on SubstrateVM
      run: trufflesqueak --native --code "SystemReporter new reportText asString" images/test-64bit.image
    - name: Run tinyBenchmarks on GraalVM
      run: trufflesqueak --jvm --code "1 tinyBenchmarks" images/test-64bit.image
    - name: Run tinyBenchmarks on SubstrateVM
      run: trufflesqueak --native --code "1 tinyBenchmarks" images/test-64bit.image
    - name: Upload TruffleSqueak components
      run: |
        mx.trufflesqueak/utils.sh deploy-asset ${{ env.INSTALLABLE_JVM_TARGET }} ${{ secrets.GITHUB_TOKEN }}
        mx.trufflesqueak/utils.sh deploy-asset ${{ env.INSTALLABLE_SVM_TARGET }} ${{ secrets.GITHUB_TOKEN }}
    - name: Run gate with Graal compiler, Graal.js, and code coverage
      run: mx --disable-polyglot --dy /compiler,/graal-js gate --strict-mode --tags build,test --jacocout coverage
    - name: Report code coverage
      env:
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      run: |
        bash <(curl -s https://codecov.io/bash)
        curl -sSL --retry 3 -o ~/codacy-coverage-reporter.jar "https://github.com/codacy/codacy-coverage-reporter/releases/download/4.0.3/codacy-coverage-reporter-4.0.3-assembly.jar"
        java -jar ~/codacy-coverage-reporter.jar report -l Java -r jacoco.xml
      if: success()

  linux-java11-aarch64:
    name: Linux + JDK11 + aarch64
    timeout-minutes: 30
    runs-on: ubuntu-18.04
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Clone TruffleSqueak repository
        uses: actions/checkout@v2
      - name: Build, install, and test TruffleSqueak component
        uses: uraimo/run-on-arch-action@v2.0.7
        id: build_aarch64
        with:
          arch: aarch64
          distro: ubuntu20.04
          run: |
            apt update && apt install -y build-essential curl git python unzip
            mx.trufflesqueak/utils.sh set-up-dependencies java11
            source "${HOME}/all_env_vars"
            export PATH="${PATH}:${MX_HOME}:${GRAALVM_HOME}/bin"
            mx --disable-installables=false build --dependencies=SMALLTALK_INSTALLABLE_JAVA11
            cp "$(mx --disable-installables=false paths SMALLTALK_INSTALLABLE_JAVA11)" "${INSTALLABLE_JVM_TARGET}"
            echo ::set-output name=installable_jvm::${INSTALLABLE_JVM_TARGET}
            gu install -L "${INSTALLABLE_JVM_TARGET}"
            trufflesqueak --jvm --code "SystemReporter new reportText asString"
            trufflesqueak --jvm --code "1 tinyBenchmarks" images/test-64bit.image
          env: |
            GITHUB_PATH: $GITHUB_PATH
            GITHUB_ENV: $GITHUB_ENV
      - name: Upload TruffleSqueak component
        run: mx.trufflesqueak/utils.sh deploy-asset ${{ steps.build_aarch64.outputs.installable_jvm }} ${{ secrets.GITHUB_TOKEN }}

  macos-java11:
    name: macOS + JDK11
    timeout-minutes: 90
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - name: Clone TruffleSqueak repository
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up dependencies
      shell: bash
      run: |
        HOMEBREW_NO_AUTO_UPDATE=1 brew install sdl2
        mx.trufflesqueak/utils.sh set-up-dependencies java11
    - name: Build TruffleSqueak components
      run: mx.trufflesqueak/utils.sh build-components java11
    - name: Install SVM-enabled TruffleSqueak component
      run: gu install -L "${INSTALLABLE_SVM_TARGET}"
    - name: Run SystemReporter on GraalVM
      run: trufflesqueak --jvm --code "SystemReporter new reportText asString"
    - name: Run SystemReporter on SubstrateVM
      run: trufflesqueak --native --code "SystemReporter new reportText asString" images/test-64bit.image
    - name: Run tinyBenchmarks on GraalVM
      run: trufflesqueak --jvm --code "1 tinyBenchmarks" images/test-64bit.image
    - name: Run tinyBenchmarks on SubstrateVM
      run: trufflesqueak --native --code "1 tinyBenchmarks" images/test-64bit.image
    - name: Upload TruffleSqueak components
      run: |
        mx.trufflesqueak/utils.sh deploy-asset ${{ env.INSTALLABLE_JVM_TARGET }} ${{ secrets.GITHUB_TOKEN }}
        mx.trufflesqueak/utils.sh deploy-asset ${{ env.INSTALLABLE_SVM_TARGET }} ${{ secrets.GITHUB_TOKEN }}
    - name: Run gate with Graal compiler and Graal.js
      run: mx --disable-polyglot --dy /compiler,/graal-js gate --strict-mode --tags build,test

  macos-java8:
    name: macOS + JDK8
    timeout-minutes: 90
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - name: Clone TruffleSqueak repository
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up dependencies
      shell: bash
      run: |
        HOMEBREW_NO_AUTO_UPDATE=1 brew install sdl2
        mx.trufflesqueak/utils.sh set-up-dependencies java8
    - name: Build TruffleSqueak components
      run: mx.trufflesqueak/utils.sh build-components java8
    - name: Install SVM-enabled TruffleSqueak component
      run: gu install -L "${INSTALLABLE_SVM_TARGET}"
    - name: Run SystemReporter on GraalVM
      run: trufflesqueak --jvm --code "SystemReporter new reportText asString"
    - name: Run SystemReporter on SubstrateVM
      run: trufflesqueak --native --code "SystemReporter new reportText asString" images/test-64bit.image
    - name: Run tinyBenchmarks on GraalVM
      run: trufflesqueak --jvm --code "1 tinyBenchmarks" images/test-64bit.image
    - name: Run tinyBenchmarks on SubstrateVM
      run: trufflesqueak --native --code "1 tinyBenchmarks" images/test-64bit.image
    - name: Upload TruffleSqueak components
      run: |
        mx.trufflesqueak/utils.sh deploy-asset ${{ env.INSTALLABLE_JVM_TARGET }} ${{ secrets.GITHUB_TOKEN }}
        mx.trufflesqueak/utils.sh deploy-asset ${{ env.INSTALLABLE_SVM_TARGET }} ${{ secrets.GITHUB_TOKEN }}
    - name: Run gate with Graal compiler and Graal.js
      run: mx --disable-polyglot --dy /compiler,/graal-js gate --strict-mode --tags build,test

  windows-java11:
    name: Windows + JDK11
    timeout-minutes: 90
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - name: Clone TruffleSqueak repository
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up dependencies
      shell: bash
      run: mx.trufflesqueak/utils.sh set-up-dependencies java11
    - name: Build TruffleSqueak component
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
        mx --disable-installables=false build --dependencies=SMALLTALK_INSTALLABLE_JAVA11
    - name: Copy and install TruffleSqueak component
      shell: pwsh
      run: |
        Copy-Item $(mx --disable-installables=false paths SMALLTALK_INSTALLABLE_JAVA11) -Destination "${pwd}\${env:INSTALLABLE_JVM_TARGET}"
        gu.cmd install -L "${pwd}\${env:INSTALLABLE_JVM_TARGET}"
    - name: Run SystemReporter on GraalVM
      run: trufflesqueak.cmd --jvm --code "SystemReporter new reportText asString"
    - name: Run tinyBenchmarks on GraalVM
      run: trufflesqueak.cmd --jvm --code "1 tinyBenchmarks" images/test-64bit.image
    - name: Upload TruffleSqueak component
      shell: bash
      run: mx.trufflesqueak/utils.sh deploy-asset ${{ env.INSTALLABLE_JVM_TARGET }} ${{ secrets.GITHUB_TOKEN }}
    - name: Run gate with Graal compiler and Graal.js
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
        mx --disable-polyglot --dy /compiler,/graal-js gate --strict-mode --tags build,test

  windows-java8:
    name: Windows + JDK8
    timeout-minutes: 90
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
    - name: Clone TruffleSqueak repository
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up dependencies
      shell: bash
      run: mx.trufflesqueak/utils.sh set-up-dependencies java8
    - name: Build TruffleSqueak component
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
        mx --disable-installables=false build --dependencies=SMALLTALK_INSTALLABLE_JAVA8
    - name: Copy and install TruffleSqueak component
      shell: pwsh
      run: |
        Copy-Item $(mx --disable-installables=false paths SMALLTALK_INSTALLABLE_JAVA8) -Destination "${pwd}\${env:INSTALLABLE_JVM_TARGET}"
        gu.cmd install -L "${pwd}\${env:INSTALLABLE_JVM_TARGET}"
    - name: Run SystemReporter on GraalVM
      run: trufflesqueak.cmd --jvm --code "SystemReporter new reportText asString"
    - name: Run tinyBenchmarks on GraalVM
      run: trufflesqueak.cmd --jvm --code "1 tinyBenchmarks" images/test-64bit.image
    - name: Upload TruffleSqueak component
      shell: bash
      run: mx.trufflesqueak/utils.sh deploy-asset ${{ env.INSTALLABLE_JVM_TARGET }} ${{ secrets.GITHUB_TOKEN }}
    - name: Run gate with Graal compiler and Graal.js
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
        mx --disable-polyglot --dy /compiler,/graal-js gate --strict-mode --tags build,test
